const express = require('express');
const router = express.Router();
const Product = require('../models/Product'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
router.get('/', async (req, res) => {
    try {
        const products = await Product.find({}, { createdAt: 0, updatedAt: 0 }); // –ò—Å–∫–ª—é—á–∞–µ–º createdAt –∏ updatedAt
        res.json(products);
    } catch (error) {
        res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', error });
    }
});

// –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
router.post('/', async (req, res) => {
    try {
        console.log('üì• –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', req.body); // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

        const { imageUrl, name, description, price } = req.body;

        if (!imageUrl || !name || !description || !price) {
            return res.status(400).json({ message: '–í—Å–µ –ø–æ–ª—è (imageUrl, name, description, price) –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!' });
        }

        const newProduct = new Product({ imageUrl, name, description, price });
        await newProduct.save();

        // –£–±–∏—Ä–∞–µ–º createdAt –∏ updatedAt –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
        const { createdAt, updatedAt, ...productData } = newProduct.toObject();

        res.status(201).json(productData);
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:', error);
        res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞', error });
    }
});

// –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä –ø–æ ID
router.get('/:id', async (req, res) => {
    try {
        const product = await Product.findById(req.params.id, { createdAt: 0, updatedAt: 0 }); // –ò—Å–∫–ª—é—á–∞–µ–º createdAt –∏ updatedAt
        if (!product) {
            return res.status(404).json({ message: '–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω' });
        }
        res.json(product);
    } catch (error) {
        res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', error });
    }
});

// –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –ø–æ ID
router.delete('/:id', async (req, res) => {
    try {
        const product = await Product.findByIdAndDelete(req.params.id);
        if (!product) {
            return res.status(404).json({ message: '–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω' });
        }
        res.json({ message: '–¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω' });
    } catch (error) {
        res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', error });
    }
});

module.exports = router;
